// // File generated by FlutterFire CLI.
// // ignore_for_file: type=lint
// import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
// import 'package:flutter/foundation.dart'
//     show defaultTargetPlatform, kIsWeb, TargetPlatform;

// /// Default [FirebaseOptions] for use with your Firebase apps.
// ///
// /// Example:
// /// ```dart
// /// import 'firebase_options.dart';
// /// // ...
// /// await Firebase.initializeApp(
// ///   options: DefaultFirebaseOptions.currentPlatform,
// /// );
// /// ```
// class DefaultFirebaseOptions {
//   static FirebaseOptions get currentPlatform {
//     if (kIsWeb) {
//       throw UnsupportedError(
//         'DefaultFirebaseOptions have not been configured for web - '
//         'you can reconfigure this by running the FlutterFire CLI again.',
//       );
//     }
//     switch (defaultTargetPlatform) {
//       case TargetPlatform.android:
//         return android;
//       case TargetPlatform.iOS:
//         return ios;
//       case TargetPlatform.macOS:
//         throw UnsupportedError(
//           'DefaultFirebaseOptions have not been configured for macos - '
//           'you can reconfigure this by running the FlutterFire CLI again.',
//         );
//       case TargetPlatform.windows:
//         throw UnsupportedError(
//           'DefaultFirebaseOptions have not been configured for windows - '
//           'you can reconfigure this by running the FlutterFire CLI again.',
//         );
//       case TargetPlatform.linux:
//         throw UnsupportedError(
//           'DefaultFirebaseOptions have not been configured for linux - '
//           'you can reconfigure this by running the FlutterFire CLI again.',
//         );
//       default:
//         throw UnsupportedError(
//           'DefaultFirebaseOptions are not supported for this platform.',
//         );
//     }
//   }

//   static const FirebaseOptions android = FirebaseOptions(
//     apiKey: 'AIzaSyBi9JphWej8RhFk9MQaDT_FSXaNpbYPRqE',
//     appId: '1:124810120022:android:d3118988ee2e0fe2c964f7',
//     messagingSenderId: '124810120022',
//     projectId: 'zego-calling-4a4a7',
//     storageBucket: 'zego-calling-4a4a7.firebasestorage.app',
//   );

//   static const FirebaseOptions ios = FirebaseOptions(
//     apiKey: 'AIzaSyC1St88oUqQo_EiL8QKlOk6NiTkkRyZmbk',
//     appId: '1:124810120022:ios:4578926c0398ff6ac964f7',
//     messagingSenderId: '124810120022',
//     projectId: 'zego-calling-4a4a7',
//     storageBucket: 'zego-calling-4a4a7.firebasestorage.app',
//     iosBundleId: 'com.example.newZegoCloud',
//   );
// }

// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
///
// dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
///
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyDsepazPtoXpq-INfdpUPpZf81ICjVe5Oo',
    appId: '1:908925361289:web:24b768d5d4d0f379ea7a58',
    messagingSenderId: '908925361289',
    projectId: 'service-provider-partner-app',
    authDomain: 'service-provider-partner-app.firebaseapp.com',
    storageBucket: 'service-provider-partner-app.firebasestorage.app',
    measurementId: 'G-WKC39K8LV6',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCCuA35COC5bjDcMpgLRD5i8PPXZHN_sAo',
    appId: '1:908925361289:android:65da731c8de2d3b5ea7a58',
    messagingSenderId: '908925361289',
    projectId: 'service-provider-partner-app',
    storageBucket: 'service-provider-partner-app.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyBWiDo8PQUOB2HQlO9SkQxuVzdxyRrVo28',
    appId: '1:908925361289:ios:e390ee71955d2ab8ea7a58',
    messagingSenderId: '908925361289',
    projectId: 'service-provider-partner-app',
    storageBucket: 'service-provider-partner-app.firebasestorage.app',
    iosBundleId: 'com.example.servyoUser',
  );
}
